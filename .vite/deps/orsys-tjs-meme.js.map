{
  "version": 3,
  "sources": ["../../node_modules/orsys-tjs-meme/src/interfaces/common.ts", "../../node_modules/orsys-tjs-meme/src/ui/MemeViewer/MemeViewer.tsx", "../../node_modules/orsys-tjs-meme/src/ui/MemeThumbnail/MemeThumbnail.tsx", "../../node_modules/orsys-tjs-meme/src/index.tsx"],
  "sourcesContent": ["export interface IMeme {\n  id?: number\n  titre: string\n  text: string\n  x: number\n  y: number\n  fontWeight: string\n  fontSize: number\n  underline: boolean\n  italic: boolean\n  imageId: number\n  color: string\n  frameSizeX: number\n  frameSizeY: number\n}\nexport const DummyMeme: IMeme = {\n  titre: '',\n  text: '',\n  x: 0,\n  y: 17,\n  fontWeight: '500',\n  fontSize: 30,\n  underline: false,\n  italic: false,\n  imageId: 0,\n  color: '#000000',\n  frameSizeX: 0,\n  frameSizeY: 0\n}\nexport interface IImage {\n  id: number\n  url: string\n  w: number\n  h: number\n  name: string\n}\n", "import React from 'react'\nimport { IImage, IMeme } from '../../interfaces/common'\nimport style from './MemeViewer.module.css'\n\nexport interface IMemeViewerProps {\n  meme: IMeme\n  image: IImage | undefined\n  basePath?: string\n}\nconst MemeViewer: React.FC<IMemeViewerProps> = (props) => {\n  return (\n    <svg\n      className={style.MemeViewer}\n      data-testid='MemeViewer'\n      viewBox={`0 0 ${props.image ? props.image.w : '1000'} ${\n        props.image ? props.image.h : '1000'\n      }`}\n    >\n      {undefined !== props.image && (\n        <image href={`${props.basePath}${props.image.url}`} x='0' y='0' />\n      )}\n      <text\n        x={props.meme.x}\n        y={props.meme.y}\n        fontSize={props.meme.fontSize}\n        fill={props.meme.color}\n        textDecoration={props.meme.underline ? 'underline' : 'none'}\n        fontStyle={props.meme.italic ? 'italic' : 'normal'}\n        fontWeight={props.meme.fontWeight}\n      >\n        {props.meme.text}\n      </text>\n    </svg>\n  )\n}\nMemeViewer.defaultProps = { basePath: '/img/' }\nexport default MemeViewer\n", "import React from 'react'\r\nimport { IImage, IMeme } from '../../interfaces/common'\r\nimport MemeViewer from '../MemeViewer/MemeViewer'\r\nimport style from './MemeThumbnail.module.css'\r\nexport interface IAppProps {\r\n  memes: Array<IMeme>\r\n  images: Array<IImage>\r\n  basePath?: string\r\n}\r\n\r\nconst MemeThumbnail: React.FC<IAppProps> = (props) => {\r\n  return (\r\n    <div className={style.MemeThumbnail}>\r\n      {props.memes.map((e: IMeme, i: number) => (\r\n        <MemeViewer\r\n          key={i}\r\n          meme={e}\r\n          image={props.images.find((img: IImage) => img.id === e.imageId)}\r\n          basePath={props.basePath}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\nMemeThumbnail.defaultProps = { basePath: '/img/' }\r\nexport default MemeThumbnail\r\n", "//import * as React from 'react'\r\n// import styles from './styles.module.css'\r\nimport { DummyMeme, IImage, IMeme } from './interfaces/common'\r\nimport MemeThumbnail from './ui/MemeThumbnail/MemeThumbnail'\r\nimport MemeViewer, { IMemeViewerProps } from './ui/MemeViewer/MemeViewer'\r\n// interface Props\r\n//   text: string\r\n// }\r\n\r\n// export const ExampleComponent = ({ text }: Props) => {\r\n//   return <div className={styles.test}>Example Component: {text}</div>\r\n// }\r\nexport const MemeSVGViewer = MemeViewer\r\nexport const MemeSVGThumbnail = MemeThumbnail\r\nexport default IMemeViewerProps\r\nexport interface MemeInterface extends IMeme {}\r\nexport interface ImageInterface extends IImage {}\r\nexport const emptyMeme = DummyMeme\r\n"],
  "mappings": ";;;;;;;AAeO,IAAMA,YAAmB;EAC9BC,OAAO;EACPC,MAAM;EACNC,GAAG;EACHC,GAAG;EACHC,YAAY;EACZC,UAAU;EACVC,WAAW;EACXC,QAAQ;EACRC,SAAS;EACTC,OAAO;EACPC,YAAY;EACZC,YAAY;AAZkB;;ACNhC,IAAMC,aAAyC,SAAzCA,YAA0CC,OAAD;AAC7C,SACEC,aAAAA,QAAAA,cAAA,OAAA;IACEC,WAAWC,MAAMJ;mBACL;IACZK,SAAO,UAASJ,MAAMK,QAAQL,MAAMK,MAAMC,IAAI,UAAvC,OACLN,MAAMK,QAAQL,MAAMK,MAAME,IAAI;KAG/BC,WAAcR,MAAMK,SACnBJ,aAAAA,QAAAA,cAAA,SAAA;IAAOQ,MAAI,KAAKT,MAAMU,WAAWV,MAAMK,MAAMM;IAAOtB,GAAE;IAAIC,GAAE;GAA5D,GAEFW,aAAAA,QAAAA,cAAA,QAAA;IACEZ,GAAGW,MAAMY,KAAKvB;IACdC,GAAGU,MAAMY,KAAKtB;IACdE,UAAUQ,MAAMY,KAAKpB;IACrBqB,MAAMb,MAAMY,KAAKhB;IACjBkB,gBAAgBd,MAAMY,KAAKnB,YAAY,cAAc;IACrDsB,WAAWf,MAAMY,KAAKlB,SAAS,WAAW;IAC1CH,YAAYS,MAAMY,KAAKrB;KAEtBS,MAAMY,KAAKxB,IATd,CAVF;AAuBH;AACDW,WAAWiB,eAAe;EAAEN,UAAU;AAAZ;;ACzB1B,IAAMO,gBAAqC,SAArCA,eAAsCjB,OAAD;AACzC,SACEC,aAAAA,QAAAA,cAAA,OAAA;IAAKC,WAAWC,QAAMc;KACnBjB,MAAMkB,MAAMC,IAAI,SAACC,GAAUC,GAAX;AAAA,WACfpB,aAAAA,QAAAA,cAACF,YAAD;MACEuB,KAAKD;MACLT,MAAMQ;MACNf,OAAOL,MAAMuB,OAAOC,KAAK,SAACC,KAAD;AAAA,eAAiBA,IAAIC,OAAON,EAAEzB;OAAhD;MACPe,UAAUV,MAAMU;KAJlB;GADD,CADH;AAWH;AACDO,cAAcD,eAAe;EAAEN,UAAU;AAAZ;ICZhBiB,gBAAgB5B;AAC7B,IAAa6B,mBAAmBX;AAIhC,IAAaY,YAAY3C;",
  "names": ["DummyMeme", "titre", "text", "x", "y", "fontWeight", "fontSize", "underline", "italic", "imageId", "color", "frameSizeX", "frameSizeY", "MemeViewer", "props", "React", "className", "style", "viewBox", "image", "w", "h", "undefined", "href", "basePath", "url", "meme", "fill", "textDecoration", "fontStyle", "defaultProps", "MemeThumbnail", "memes", "map", "e", "i", "key", "images", "find", "img", "id", "MemeSVGViewer", "MemeSVGThumbnail", "emptyMeme"]
}
